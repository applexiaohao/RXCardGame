{"name":"热血斗地主","tagline":"","body":"# 热血斗地主\r\n\r\n[TOC]\r\n\r\n## 模块化思想设计\r\n\r\n### 游戏纸牌逻辑模块 类列表\r\n- \tRX_Card.cs\r\n- \tRX_CardManager.cs\r\n- \tRX_CardSet.cs\r\n- \tRX_CardType.cs\r\n- \tRX_PopCardSet.cs\r\n- \tRX_PopCardSetManager.cs\r\n- \tRX_SeatInfo.cs\r\n\r\n**洗牌、发牌功能(RX_Manager.cs)**\r\n\r\n```\r\n\t/// <summary>\r\n\t/// 洗牌函数\r\n\t/// </summary>\r\n\tpublic void Reshuffle()\r\n\t{\r\n\t\t//洗牌\r\n\t\tList<RX_Card> list = RX_CardManager.DefaultManager().Reshuffle ();\r\n\r\n\t\t//创建底下的座位对象\r\n\t\tbottom_seat = new RX_SeatInfo(RX_SEAT_POSITION.RX_SEAT_BOTTOM,this.bottom_pool);\r\n\t\tbottom_seat.CardList = list.GetRange(0,17);\r\n\r\n\t\t//创建左边的座位对象\r\n\t\tleft_seat = new RX_SeatInfo(RX_SEAT_POSITION.RX_SEAT_LEFT,this.left_pool);\r\n\t\tleft_seat.CardList = list.GetRange (17, 17);\r\n\r\n\t\t//创建右边的座位对象\r\n\t\tright_seat = new RX_SeatInfo(RX_SEAT_POSITION.RX_SEAT_RIGHT,this.right_pool);\r\n\t\tright_seat.CardList = list.GetRange (34, 17);\r\n\r\n\t\t//创建上边的座位对象\r\n\t\ttop_seat = new RX_SeatInfo(RX_SEAT_POSITION.RX_SEAT_TOP,this.top_pool);\r\n\t\ttop_seat.CardList = list.GetRange (51, 3);\r\n\r\n\t\tseat = bottom_seat;\r\n\t}\r\n```\r\n**打牌功能(RX_Manager.cs)**\r\n```\r\n\t/// <summary>\r\n\t/// 弹出选中的牌型\r\n\t/// </summary>\r\n\tprivate RX_SeatInfo seat = null;\r\n\tpublic void PopSet()\r\n\t{\r\n\r\n\t\tRX_CardSet cardset = seat.PopCardSet ();\r\n\r\n\t\tif (cardset == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tbool is_successed = true;\r\n\r\n\t\tRX_PopCardSetManager.AddCardSet(cardset,out is_successed);\r\n\r\n\r\n\t\tif (is_successed) \r\n\t\t{\r\n\t\t\tif (seat == bottom_seat) \r\n\t\t\t{\r\n\t\t\t\tNGUITools.DestroyChildren(bottom_pop_pool.transform);\r\n\t\t\t\tseat.RemoveCardSet(cardset,bottom_pop_pool);\r\n\t\t\t\tbottom_pop_label.text = \"\";\r\n\r\n\t\t\t\tseat = this.right_seat;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (seat == this.right_seat) \r\n\t\t\t{\r\n\t\t\t\tNGUITools.DestroyChildren(right_pop_pool.transform);\r\n\t\t\t\tseat.RemoveCardSet(cardset,right_pop_pool);\r\n\t\t\t\tright_pop_label.text = \"\";\r\n\r\n\t\t\t\tseat = this.left_seat;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (seat == this.left_seat) \r\n\t\t\t{\r\n\r\n\t\t\t\tNGUITools.DestroyChildren(left_pop_pool.transform);\r\n\t\t\t\tseat.RemoveCardSet(cardset,left_pop_pool);\r\n\t\t\t\tleft_pop_label.text = \"\";\r\n\r\n\t\t\t\tseat = this.bottom_seat;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//当牌型不属于斗地主牌型时,cardset则为null\r\n\t\t//例如,选中的牌是3,4\r\n\t\t//例如,选中的牌是qq,kk,aa,22s\r\n\t}\r\n\r\n\tpublic void DontPop()\r\n\t{\r\n\t\tRX_CardSet cardset = new RX_CardSet();\r\n\t\tcardset.Typer = RX_CARD_SET.RX_TYPE_BUCHU;\r\n\r\n\t\tbool isSuccessed = true;\r\n\t\tRX_PopCardSetManager.AddCardSet(cardset,out isSuccessed);\r\n\r\n\t\tif (seat == bottom_seat) \r\n\t\t{\r\n\t\t\tbottom_pop_label.text = \"Pass\";\r\n\r\n\t\t\tNGUITools.DestroyChildren(bottom_pop_pool.transform);\r\n\r\n\t\t\tseat = this.right_seat;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (seat == this.right_seat) {\r\n\r\n\t\t\tright_pop_label.text = \"Pass\";\r\n\t\t\r\n\t\t\tNGUITools.DestroyChildren(right_pop_pool.transform);\r\n\r\n\t\t\tseat = this.left_seat;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (seat == this.left_seat) {\r\n\r\n\t\t\tleft_pop_label.text = \"Pass\";\r\n\r\n\t\t\tNGUITools.DestroyChildren(left_pop_pool.transform);\r\n\r\n\t\t\tseat = this.bottom_seat;\r\n\t\t}\r\n\t}\r\n```\r\n### 游戏网络逻辑模块 类列表\r\n- \tLO_GameServer.cs\r\n- \tRX_DataServer.cs\r\n- \tRX_UserInfo.cs\r\n- \tLO_XMLTool.cs\r\n- \tRX_RootScript.cs\r\n- \tRX_RoomScript.cs\r\n\r\n**登陆、注册功能(RX_RootScript.cs)**\r\n```\r\n\t/// <summary>\r\n\t/// 用来检测输入框的信息是否正确,位数大于6位\r\n\t/// </summary>\r\n\tprivate bool CheckUserInfo()\r\n\t{\r\n\t\tbool result = true;\r\n\r\n\t\tif (this.UserName.Length < 6 || this.UserPwd.Length < 6) \r\n\t\t{\r\n\t\t\tDebug.Log(\"invalid user's infomation\");\r\n\t\t\tresult = false;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// 注册按钮触发的消息\r\n\t/// </summary>\r\n\tpublic void OnClickRegister()\r\n\t{\r\n\t\tif (CheckUserInfo()) \r\n\t\t{\r\n\t\t\t//通过RX_DataServer单例类进行用户信息注册\r\n\t\t\tRX_DataServer.DefaultServer.Register(this.UserName,this.UserPwd,(string xml)=>{\r\n\r\n\t\t\t\t//返回的注册信息\r\n\t\t\t\terror data = (error)LO_XMLTool.Deserialize(typeof(error),xml);\r\n\r\n\t\t\t\tDebug.Log(data);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// 登陆、注册场景中点击登陆按钮触发的消息方法\r\n\t/// </summary>\r\n\tpublic void OnClickLogin()\r\n\t{\r\n\t\tif (CheckUserInfo()) \r\n\t\t{\r\n\t\t\t//通过RX_DataServer单例类的登陆方法，对用户进行登陆\r\n\t\t\tRX_DataServer.DefaultServer.Login(this.UserName,this.UserPwd,(string xml)=>{\r\n\r\n\t\t\t\t//解析用户信息\r\n\t\t\t\tRX_UserInfo user = (RX_UserInfo)LO_XMLTool.Deserialize(typeof(RX_UserInfo),xml);\r\n\r\n\t\t\t\t//当解析用户失败时，即登陆失败\r\n\t\t\t\tif (user == null) {\r\n\t\t\t\t\tDebug.Log(\"failed\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tDebug.Log(\"successed\");\r\n\r\n\t\t\t\t\t//存储登陆成功后的用户信息\r\n\t\t\t\t\tRX_UserManager.DefaultUser = user;\r\n\r\n\t\t\t\t\t//加载房间列表场景\r\n\t\t\t\t\tApplication.LoadLevel(\"RoomScene\");\r\n\t\t\t\t}\r\n\t\t\t});\t\t\r\n\t\t}\r\n\t}\r\n```\r\n**初始化游戏服务器功能(RX_RoomScript.cs)**\r\n```\r\n\t// Use this for initialization\r\n\tvoid Start () {\r\n\r\n\t\t//初始化游戏的MasterServer服务器\r\n\t\tLO_GameServer.DefaultServer.InitServer(RX_Define.RX_ServerIP,RX_Define.RX_ServerPort);\r\n\r\n\t\t//设定登陆游戏服务器的游戏角色\r\n\t\tsceneTitle.text = RX_UserManager.DefaultUser.user_name;\r\n\t}\r\n```\r\n\r\n**创建房间功能(RX_RoomScript.cs)**\r\n```\r\n\t/// <summary>\r\n\t/// 通过用户昵称来创建斗地主房间\r\n\t/// </summary>\r\n\tpublic void CreateRoom()\r\n\t{\r\n\t\t//创建游戏房间\r\n\t\tLO_GameServer.DefaultServer.CreateRoom(RX_UserManager.DefaultUser.user_name + \"'s DZZ\");\r\n\t}\r\n```\r\n**获取房间列表功能(RX_RoomScript.cs)**\r\n```\r\n\t/// <summary>\r\n\t/// 房间列表的容器\r\n\t/// </summary>\r\n\tpublic UIGrid\t\troom_grid;\r\n\r\n\t/// <summary>\r\n\t/// 房间列表中的每个小房间的prefab\r\n\t/// </summary>\r\n\tpublic GameObject\troom_item;\r\n\r\n\r\n\t/// <summary>\r\n\t/// 用户点击刷新按钮时触发的获取房间消息\r\n\t/// </summary>\r\n\tpublic void GetRoomList()\r\n\t{\r\n\t\t//通过LO_GameServer单例类开始请求房间列表\r\n\t\tLO_GameServer.DefaultServer.StartRequestRoom((HostData[] data)=>{\r\n\r\n\t\t\t//获取到新的房间列表后,将视图上旧的房间空间都删除掉\r\n\t\t\tNGUITools.DestroyChildren(room_grid.transform);\r\n\r\n\t\t\t//遍历循环添加新的房间控件\r\n\t\t\tforeach (HostData item in data) \r\n\t\t\t{\r\n\r\n\t\t\t\t//通过NGUITools工具类,在Grid节点上添加对应的房间控件\r\n\t\t\t\tGameObject room = NGUITools.AddChild(room_grid.gameObject,room_item);\t\r\n\r\n\t\t\t\t//获取每个房间上的需要修改的label和button控件\r\n\t\t\t\tUILabel name_label \t= room.transform.GetChild(0).GetComponent<UILabel>();\r\n\t\t\t\tUILabel count_label = room.transform.GetChild(1).GetComponent<UILabel>();\r\n\t\t\t\tUIButton join_btn \t= room.transform.GetChild(2).GetComponent<UIButton>();\r\n\r\n\t\t\t\t//游戏名称\r\n\t\t\t\tname_label.text = item.gameName;\r\n\r\n\t\t\t\t//人数\r\n\t\t\t\tcount_label.text = item.connectedPlayers.ToString();\r\n\r\n\t\t\t\t//加入房间按钮\r\n\t\t\t\tif (item.connectedPlayers >= 3) {\r\n\t\t\t\t\tjoin_btn.enabled = false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t//点击加入房间按钮触发时执行的过程\r\n\t\t\t\t\tjoin_btn.onClick.Add(new EventDelegate(() =>{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tLO_GameServer.DefaultServer.JoinHostRoom(item,(int state)=>{\r\n\t\t\t\t\t\t\tif (state == 0) {\r\n\t\t\t\t\t\t\t\tDebug.Log(\"加入房间\" + item.gameName + \"成功\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//重新刷新一下Grid控件的布局\r\n\t\t\t\troom_grid.enabled = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}