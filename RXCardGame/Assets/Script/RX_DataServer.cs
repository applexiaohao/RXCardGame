// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;

namespace AssemblyCSharp
{
	public class error
	{
		public string state{set;get;}
		public string message{set;get;}

		public override string ToString ()
		{
			return string.Format ("[error: state={0}, message={1}]", state, message);
		}
	}

	public class RX_DataServer:MonoBehaviour
	{

		public delegate void DataServerDelegate(string xml);


		#region Singleton

		private RX_DataServer(){}
		private static RX_DataServer s_RX_DataServer = null;
		private static GameObject	  s_RX_DataObject = null;
		public static RX_DataServer DefaultServer{
			get{
				if (s_RX_DataServer == null) {
					s_RX_DataObject = new GameObject("DataServer");
					s_RX_DataServer = s_RX_DataObject.AddComponent<RX_DataServer>();

				}
				return s_RX_DataServer;
			}
		}


		#endregion

		private bool isConnectedToDataServer = false;
		private string Name{set;get;}
		private string Pwd{set;get;}
		private DataServerDelegate block;


		public void Register(string name,string pwd,DataServerDelegate sender)
		{
			if (isConnectedToDataServer) {
				return;
			}
			this.block = sender;
			this.Name = name;
			this.Pwd = pwd;
			StartCoroutine("RegisterToDataServer");
		}

		IEnumerator RegisterToDataServer()
		{
			isConnectedToDataServer = true;

			string register_url = RX_Define.RX_URI + "register.php?";

			register_url += "name="+this.Name;
			register_url += "&&";
			register_url += "pwd="+this.Pwd;

			Debug.Log(register_url);

			WWW www = new WWW(register_url);

			yield return www;

			isConnectedToDataServer = false;


			this.block(www.text);
		}

		public void Login(string name,string pwd,DataServerDelegate sender)
		{
			if (isConnectedToDataServer) {
				return;
			}
			this.block = sender;
			this.Name = name;
			this.Pwd = pwd;
			StartCoroutine("LoginToDataServer");
		}

		IEnumerator LoginToDataServer()
		{
			isConnectedToDataServer = true;
			
			string register_url = RX_Define.RX_URI + "login.php?";
			
			register_url += "name="+this.Name;
			register_url += "&&";
			register_url += "pwd="+this.Pwd;
			
			Debug.Log(register_url);
			
			WWW www = new WWW(register_url);
			
			yield return www;
			
			isConnectedToDataServer = false;
			this.block(www.text);
		}
	}
}

